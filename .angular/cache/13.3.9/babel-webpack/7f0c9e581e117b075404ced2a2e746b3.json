{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\karla1\\\\Documents\\\\Entrevistas\\\\Sofka\\\\Frontend\\\\ShipApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/ship.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction BehaviorsComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.name, \"\");\n  }\n}\n\nexport let BehaviorsComponent = /*#__PURE__*/(() => {\n  class BehaviorsComponent {\n    constructor(shipService) {\n      this.shipService = shipService;\n      this.ships = [];\n      this.shipFound = [];\n    }\n\n    ngOnInit() {\n      this.GetShips();\n      this.form = new FormGroup({\n        velocity: new FormControl('', [Validators.required]),\n        time: new FormControl('', [Validators.required]),\n        result: new FormControl('', [Validators.required]),\n        displacement: new FormControl('', [Validators.required])\n      });\n      this.form.controls['result'].disable();\n      this.form.controls['displacement'].disable();\n    }\n\n    changeShipSelect(e) {\n      this.ShipSelected = e.target.value;\n      this.getDisplacement(parseInt(this.ShipSelected));\n    }\n\n    changePlaceSelect(e) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.PlaceSelected = e.target.value;\n\n        if (_this.PlaceSelected === 'moon') {\n          _this.TimeSelected = '384400';\n        } else {\n          if (_this.PlaceSelected === 'sun') {\n            _this.TimeSelected = '150000000';\n          } else {\n            _this.TimeSelected = '1103760000';\n          }\n        }\n      })();\n    }\n\n    GetShips() {\n      this.shipService.getAll().subscribe(data => {\n        this.ships = data.result;\n      });\n    }\n\n    Calculate() {\n      // this.form.controls['displacement'].setValue()\n      this.resCalculated = parseInt(this.TimeSelected) / parseInt(this.velCalculated) / 8760;\n    }\n\n    getDisplacement(ship) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        return yield _this2.shipService.findFeaturesList(ship).subscribe(data => {\n          _this2.shipFound = data.result;\n          console.log(data.result);\n          let swFound = false;\n\n          _this2.shipFound.forEach(element => {\n            console.log('dentro del ciclo');\n\n            if (element.id_feature === 6) {\n              swFound = true;\n              _this2.velCalculated = element.value_feature;\n\n              _this2.form.controls['displacement'].setValue(_this2.velCalculated);\n            }\n          });\n\n          if (!swFound) {\n            console.log('Después del ciclo');\n            alert('This ship does not have a displacement feature.');\n            _this2.velCalculated = '0';\n\n            _this2.form.controls['displacement'].setValue(_this2.velCalculated);\n          }\n        });\n      })();\n    }\n\n  }\n\n  BehaviorsComponent.ɵfac = function BehaviorsComponent_Factory(t) {\n    return new (t || BehaviorsComponent)(i0.ɵɵdirectiveInject(i1.ShipService));\n  };\n\n  BehaviorsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BehaviorsComponent,\n    selectors: [[\"app-behaviors\"]],\n    decls: 27,\n    vars: 3,\n    consts: [[1, \"container\", \"mt-4\"], [\"href\", \"#\", \"routerLink\", \"/ship/view\", 1, \"btn\", \"btn-primary\"], [1, \"w-25\", \"m-auto\", 3, \"formGroup\"], [\"formControlName\", \"id_feature\", \"id\", \"id_feature\", \"matNativeControl\", \"\", 1, \"form-select\", \"bg-light\", \"form-control\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"displacement\", \"id\", \"displacement\", \"type\", \"text\", \"placeholder\", \"Displacement\", 1, \"form-control\"], [\"formControlName\", \"time\", \"id\", \"time\", \"matNativeControl\", \"\", 1, \"form-select\", \"bg-light\", \"form-control\", 3, \"change\"], [\"value\", \"moon\"], [\"value\", \"sun\"], [\"value\", \"jupiter\"], [\"formControlName\", \"result\", \"id\", \"result\", \"type\", \"text\", 1, \"form-control\", 3, \"placeholder\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-4\", \"ms-2\", 3, \"click\"], [3, \"value\"]],\n    template: function BehaviorsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\")(4, \"b\");\n        i0.ɵɵtext(5, \"Calculate Time.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"It is about calculating the time it takes each spaceship to reach three destinations according to their distance and the speed of each ship.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\", 2)(9, \"div\");\n        i0.ɵɵtext(10, \" Ship: \");\n        i0.ɵɵelementStart(11, \"select\", 3);\n        i0.ɵɵlistener(\"change\", function BehaviorsComponent_Template_select_change_11_listener($event) {\n          return ctx.changeShipSelect($event);\n        });\n        i0.ɵɵtemplate(12, BehaviorsComponent_option_12_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵtext(14, \" Distance: \");\n        i0.ɵɵelementStart(15, \"select\", 6);\n        i0.ɵɵlistener(\"change\", function BehaviorsComponent_Template_select_change_15_listener($event) {\n          return ctx.changePlaceSelect($event);\n        });\n        i0.ɵɵelementStart(16, \"option\", 7);\n        i0.ɵɵtext(17, \"Moon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 8);\n        i0.ɵɵtext(19, \"Sun\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 9);\n        i0.ɵɵtext(21, \"Jupiter\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(22, \" Result in Years: \");\n        i0.ɵɵelement(23, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 11)(25, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function BehaviorsComponent_Template_button_click_25_listener() {\n          return ctx.Calculate();\n        });\n        i0.ɵɵtext(26, \"Result\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ships);\n        i0.ɵɵadvance(11);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.resCalculated);\n      }\n    },\n    directives: [i2.RouterLinkWithHref, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor],\n    styles: [\"\"]\n  });\n  return BehaviorsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}